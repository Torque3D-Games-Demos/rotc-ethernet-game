//------------------------------------------------------------------------------
// Revenge Of The Cats: Ethernet
// Copyright (C) 2008, mEthLab Interactive
//------------------------------------------------------------------------------

//--- OBJECT WRITE BEGIN ---
new GuiControl(ConsoleDlg) {
   canSaveDynamicFields = "0";
   Profile = "GuiDefaultProfile";
   HorizSizing = "right";
   VertSizing = "bottom";
   position = "0 0";
   Extent = "640 480";
   MinExtent = "8 2";
   canSave = "1";
   Visible = "1";
   hovertime = "1000";

   new GuiWindowCtrl(ConsoleDlgWindow) {
      canSaveDynamicFields = "0";
      Profile = "GuiWindowProfile";
      HorizSizing = "right";
      VertSizing = "bottom";
      position = "0 0";
      Extent = "546 363";
      MinExtent = "8 2";
      canSave = "1";
      Visible = "1";
      hovertime = "1000";
      text = "Console";
      maxLength = "255";
      resizeWidth = "1";
      resizeHeight = "1";
      canMove = "1";
      canClose = "0";
      canMinimize = "0";
      canMaximize = "1";
      minSize = "500 300";
      closeCommand = "ToggleConsole(1);";

      new GuiScrollCtrl() {
         canSaveDynamicFields = "0";
         Profile = "GuiScrollProfile";
         HorizSizing = "width";
         VertSizing = "height";
         position = "12 36";
         Extent = "525 299";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "1";
         hovertime = "1000";
         willFirstRespond = "1";
         hScrollBar = "alwaysOn";
         vScrollBar = "alwaysOn";
         constantThumbHeight = "0";
         childMargin = "0 0";

         new GuiConsole() {
            canSaveDynamicFields = "0";
            Profile = "GuiConsoleProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "2 -5618";
            Extent = "787 6699";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            hovertime = "1000";
         };
      };
      new GuiConsoleEditCtrl(ConsoleEntry) {
         canSaveDynamicFields = "0";
         Profile = "GuiTextEditProfile";
         HorizSizing = "width";
         VertSizing = "top";
         position = "12 337";
         Extent = "525 18";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "1";
         AltCommand = "ConsoleEntry::eval();";
         hovertime = "1000";
         maxLength = "255";
         historySize = "20";
         password = "0";
         tabComplete = "0";
         sinkAllKeyEvents = "1";
         password = "0";
         passwordMask = "*";
         useSiblingScroller = "1";
      };
      new GuiPaneControl(ConsoleErrorPane) {
         canSaveDynamicFields = "0";
         Profile = "GuiPaneProfile";
         HorizSizing = "width";
         VertSizing = "bottom";
         position = "15 22";
         Extent = "520 85";
         MinExtent = "474 10";
         canSave = "1";
         Visible = "1";
         hovertime = "1000";
         Caption = "No script compilation errors occured.";
         collapsable = "1";
         barBehindText = "1";

         new GuiScrollCtrl(ConsoleErrorScroller) {
            canSaveDynamicFields = "0";
            Profile = "GuiScrollProfile";
            HorizSizing = "width";
            VertSizing = "bottom";
            position = "0 14";
            Extent = "520 71";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "0";
            hovertime = "1000";
            willFirstRespond = "0";
            hScrollBar = "alwaysOff";
            vScrollBar = "alwaysOn";
            constantThumbHeight = "1";
            childMargin = "0 0";

            new GuiMLTextCtrl(ConsoleErrorDisplay) {
               canSaveDynamicFields = "0";
               Profile = "GuiMLTextProfile";
               HorizSizing = "width";
               VertSizing = "bottom";
               position = "2 2";
               Extent = "520 14";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               lineSpacing = "2";
               allowColorChars = "0";
               maxChars = "-1";
            };
         };
      };
   };
};
//--- OBJECT WRITE END ---

function ConsoleDlg::onWake()
{
	%position = $pref::Console::position;
	if(%position $= "")
		%position = ConsoleDlgWindow.position;
	
	%extent = $pref::Console::extent;
	if(getWord(%extent, 0) < getWord(ConsoleDlgWindow.minExtent, 0) ||
		getWord(%extent, 1) < getWord(ConsoleDlgWindow.minExtent, 1))
		%extent = ConsoleDlgWindow.extent;
	
	ConsoleDlgWindow.resize(getWord(%position, 0), getWord(%position, 1),
									getWord(%extent, 0),	getWord(%extent, 1));
}

function ConsoleDlg::onSleep()
{
	$pref::Console::position = ConsoleDlgWindow.position;
	$pref::Console::extent = ConsoleDlgWindow.extent;
}

function ConsoleEntry::eval()
{
	%text = trim(ConsoleEntry.getValue());

	if(strpos(%text, "(") == -1)
	{
		if(strpos(%text, "=") == -1 && strpos(%text, " ") == -1)
		{
			if(strpos(%text, "{") == -1 && strpos(%text, "}") == -1)
			{
				%text = %text @ "()";
			}
		}
	}

	%pos = strlen(%text) - 1;
	if(strpos(%text, ";", %pos) == -1 && strpos(%text, "}") == -1)
	{
		%text = %text @ ";";
	}

	echo("==>" @ %text);
	eval(%text);
	ConsoleEntry.setValue("");

	// Check for any pending errors to display
	updateConsoleErrorWindow();
}

function ToggleConsole(%make)
{
	if($enableDirectInput)
		deactivateKeyboard();

	if(%make)
	{
		if(ConsoleDlg.isAwake())
		{
			// Deactivate the console.
			
			if($enableDirectInput)
				activateKeyboard();
				
			Canvas.popDialog(ConsoleDlg);
		}
		else
		{
			if($enableDirectInput)
				deactivateKeyboard();
				
			Canvas.pushDialog(ConsoleDlg, 99);

			// Check for any pending errors to display
			updateConsoleErrorWindow();
			
			// Collapse the errors if this is the first time...
			if(ConsoleErrorPane._initialized == false)
				ConsoleErrorPane.setCollapsed(true);
		}
	}
}

// The first hash is 1000...
$ScriptErrorHashDisplayed = 999;

function updateConsoleErrorWindow()
{
	if($ScriptErrorHash != $ScriptErrorHashDisplayed && $ScriptErrorHash != 0)
	{
		// Hash was different so there must be a new error. Update the display!

		%oldText = ConsoleErrorDisplay.getText();
		
		if(%oldText !$= "")
			ConsoleErrorDisplay.setText(%oldText @ "\n" @ $ScriptError);
		else
			ConsoleErrorDisplay.setText($ScriptError);
		
		ConsoleErrorDisplay.setCursorPosition(100000); // Hacka hacka hacka
		ConsoleErrorDisplay.scrollToBottom();
		
		// Update the pane caption.
		$ConsoleErrorCount += $ScriptErrorHash - $ScriptErrorHashDisplayed;
		ConsoleErrorPane.caption = $ConsoleErrorCount @ " script compilation error(s) have occured!";
		
		// Indicate we dealt with this...
		$ScriptErrorHashDisplayed = $ScriptErrorHash;
		$ScriptError = "";
	}
}


