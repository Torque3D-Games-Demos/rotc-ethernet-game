//-----------------------------------------------
// Copyright ï¿½ Synapse Gaming 2004
// Written by John Kabus
//-----------------------------------------------

$sgLightEditor::profilePath = "common/ui/";

$sgLightEditor::profileScrollImage = $sgLightEditor::profilePath @ (($platform $= "macos") ? "osxScroll" : "darkScroll");
$sgLightEditor::profileCheckImage = $sgLightEditor::profilePath @ (($platform $= "macos") ? "osxCheck" : "torqueCheck");
$sgLightEditor::profileMenuImage = $sgLightEditor::profilePath @ (($platform $= "macos") ? "osxMenu" : "torqueMenu");

$sgLightEditor::profileSliderImage = $sgLightEditor::profilePath @ (($platform $= "macos") ? "darkSlider" : "darkSlider");


if(!isObject(sgGuiTextProfile)) new GuiControlProfile (sgGuiTextProfile)
{
	fontColor = "0 0 0";
	fontColorLink = "255 96 96";
	fontColorLinkHL = "0 0 255";
	fontSize = 12;
	autoSizeWidth = true;
	autoSizeHeight = true;
};

if(!isObject(sgGuiPopUpMenuProfile)) new GuiControlProfile (sgGuiPopUpMenuProfile)
{
	opaque = true;
	mouseOverSelected = true;

	border = 2;
	borderThickness = 2;
	borderColor = "0 0 0";
	fontSize = 12;
	fontColor = "0 0 0";
	fontColorHL = "32 100 100";
	fontColorSEL = "32 100 100";
	fixedExtent = true;
	justify = "center";
	bitmap = $sgLightEditor::profileScrollImage;
	hasBitmapArray = true;
};

if(!isObject(sgGuiSliderProfile)) new GuiControlProfile (sgGuiSliderProfile)
{
	opaque = true;
	mouseOverSelected = true;

	border = 4;
	borderThickness = 2;
	borderColor = "0 0 0";
	fontSize = 12;
	fontColor = "0 0 0";
	fontColorHL = "32 100 100";
	fontColorSEL = "32 100 100";
	fixedExtent = true;
	justify = "center";
	bitmap = $sgLightEditor::profileSliderImage;
	hasBitmapArray = true;
};

if(!isObject(sgGuiCheckBoxProfile)) new GuiControlProfile (sgGuiCheckBoxProfile)
{
	opaque = false;
	fillColor = "232 232 232";
	border = false;
	borderColor = "0 0 0";
	fontSize = 12;
	fontColor = "0 0 0";
	fontColorHL = "32 100 100";
	fixedExtent = true;
	justify = "left";
	bitmap = $sgLightEditor::profileCheckImage;
	hasBitmapArray = true;

};

if(!isObject(sgGuiTextEditProfile)) new GuiControlProfile (sgGuiTextEditProfile)
{
	opaque = true;
	fillColor = "255 255 255";
	fillColorHL = "128 128 128";
	border = 3;
	borderThickness = 2;
	borderColor = "0 0 0";
	fontColor = "0 0 0";
	fontColorHL = "255 255 255";
	fontColorNA = "128 128 128";
	fontSize = 12;
	textOffset = "0 2";
	autoSizeWidth = false;
	autoSizeHeight = true;
	tab = true;
	canKeyFocus = true;
};

if(!isObject(sgGuiButtonProfile)) new GuiControlProfile (sgGuiButtonProfile)
{
	opaque = true;
	border = true;
	fontColor = "0 0 0";
	fontColorHL = "32 100 100";
	fontSize = 12;
	fixedExtent = true;
	justify = "center";
	canKeyFocus = false;
};

if(!isObject(sgGuiMenuBarProfile)) new GuiControlProfile (sgGuiMenuBarProfile)
{
	opaque = true;
	//fillColor = ($platform $= "macos") ? "211 211 211" : "192 192 192";
	fillColorHL = "0 0 96";
	border = 1;
	fontColor = "0 0 0";
	fontColorHL = "255 255 255";
	fontColorNA = "128 128 128";
	fontSize = 12;
	fixedExtent = true;
	justify = "center";
	canKeyFocus = false;
	mouseOverSelected = true;
	bitmap = $sgLightEditor::profileMenuImage;
	hasBitmapArray = true;
};

//--- OBJECT WRITE BEGIN ---
new GuiControl(sgLightEditorForEditing) {
	canSaveDynamicFields = "0";
	Profile = "GuiDefaultProfile";
	HorizSizing = "right";
	VertSizing = "bottom";
	position = "0 0";
	Extent = "800 600";
	MinExtent = "8 8";
	canSave = "1";
	Visible = "1";
	hovertime = "1000";

   new GuiWindowCtrl(sgLightEditor) {
      canSaveDynamicFields = "0";
      Profile = "GuiWindowProfile";
      HorizSizing = "right";
      VertSizing = "top";
      position = "3 203";
      Extent = "173 275";
      MinExtent = "8 2";
      canSave = "1";
      Visible = "1";
      hovertime = "1000";
      text = "Light Editor: Light Editor";
      maxLength = "255";
      resizeWidth = "0";
      resizeHeight = "0";
      canMove = "1";
      canClose = "1";
      canMinimize = "0";
      canMaximize = "0";
      minSize = "50 50";
      closeCommand = "EditorGui::removeWindow(sgLightEditor);";

      new GuiControl(sgLightEditorLightEditorPanel) {
         canSaveDynamicFields = "0";
         Profile = "GuiDefaultProfile";
         HorizSizing = "right";
         VertSizing = "bottom";
         position = "0 48";
         Extent = "171 197";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "1";
         hovertime = "1000";

         new GuiPopUpMenuCtrl(sgLightDBList) {
            canSaveDynamicFields = "0";
            Profile = "GuiPopUpMenuProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "51 3";
            Extent = "115 16";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            hovertime = "1000";
            maxLength = "255";
            maxPopupHeight = "200";
         };
         new GuiTextCtrl() {
            canSaveDynamicFields = "0";
            Profile = "GuiTextProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "6 3";
            Extent = "39 16";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            hovertime = "1000";
            text = "Light DB:";
            maxLength = "255";
         };
         new GuiControl(sgLightEditorTypePanel) {
            canSaveDynamicFields = "0";
            Profile = "GuiWindowProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "6 42";
            Extent = "160 151";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            hovertime = "1000";

            new GuiCheckBoxCtrl(sgLightEditorLightOn) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "14 25";
               Extent = "66 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Enabled";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorStaticLight) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "89 25";
               Extent = "56 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Static";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorShadows) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "89 40";
               Extent = "66 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Shadows";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorRestrictZoneDiffuse) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "14 55";
               Extent = "126 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Restrict Diffuse To Zone";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorTwoSidedAmbient) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "14 85";
               Extent = "127 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Two Sided Ambient";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiPopUpMenuCtrl(sgLightingModelList) {
               canSaveDynamicFields = "0";
               Profile = "GuiPopUpMenuProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "72 7";
               Extent = "80 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               maxPopupHeight = "200";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 7";
               Extent = "62 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Lighting Model:";
               maxLength = "255";
            };
            new GuiCheckBoxCtrl(sgLightEditorRestrictZoneAmbient) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "14 70";
               Extent = "127 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Restrict Ambient To Zone";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorEffectsDTSObjects) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "14 40";
               Extent = "69 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "DTS Objects";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorSpotLight) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "14 100";
               Extent = "62 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Spotlight";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorSmoothing) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "89 100";
               Extent = "62 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Smoothing";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiTextEditCtrl(sgLightEditorRadius) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "70 126";
               Extent = "82 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 126";
               Extent = "32 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Radius:";
               maxLength = "255";
            };
         };
         new GuiControl(sgLightEditorColorPanel) {
            canSaveDynamicFields = "0";
            Profile = "GuiWindowProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "6 42";
            Extent = "160 151";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "0";
            hovertime = "1000";

            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 7";
               Extent = "25 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Color:";
               maxLength = "255";
            };
            new GuiSliderCtrl(sgLightEditorColorRed) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 5";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "0";
            };
            new GuiSliderCtrl(sgLightEditorColorGreen) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 26";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "0";
            };
            new GuiSliderCtrl(sgLightEditorColorBlue) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 47";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "0";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 74";
               Extent = "40 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Intensity:";
               maxLength = "255";
            };
            new GuiSliderCtrl(sgLightEditorIntensity) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 72";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "0";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 100";
               Extent = "37 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Ambient:";
               maxLength = "255";
            };
            new GuiSliderCtrl(sgLightEditorAmbient) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 98";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "0";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 126";
               Extent = "26 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Angle:";
               maxLength = "255";
            };
            new GuiSliderCtrl(sgLightEditorSpotAngle) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 124";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               range = "1 179";
               ticks = "10";
               value = "1";
            };
         };
         new GuiButtonCtrl(sgLightEditorTypeButton) {
            canSaveDynamicFields = "0";
            Profile = "GuiButtonProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "6 27";
            Extent = "38 16";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            Command = "sgLightEditor.setLightEditorPanel(sgLightEditorTypePanel);";
            hovertime = "1000";
            text = "Type";
            groupNum = "-1";
            buttonType = "RadioButton";
         };
         new GuiButtonCtrl() {
            canSaveDynamicFields = "0";
            Profile = "GuiButtonProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "43 27";
            Extent = "38 16";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            Command = "sgLightEditor.setLightEditorPanel(sgLightEditorColorPanel);";
            hovertime = "1000";
            text = "Color";
            groupNum = "-1";
            buttonType = "RadioButton";
         };
         new GuiButtonCtrl() {
            canSaveDynamicFields = "0";
            Profile = "GuiButtonProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "80 27";
            Extent = "38 16";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            Command = "sgLightEditor.setLightEditorPanel(sgLightEditorFlarePanel);";
            hovertime = "1000";
            text = "Flare";
            groupNum = "-1";
            buttonType = "RadioButton";
         };
         new GuiButtonCtrl() {
            canSaveDynamicFields = "0";
            Profile = "GuiButtonProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "117 27";
            Extent = "48 16";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            Command = "sgLightEditor.setLightEditorPanel(sgLightEditorAnimationPanel);";
            hovertime = "1000";
            text = "Animation";
            groupNum = "-1";
            buttonType = "RadioButton";
         };
         new GuiControl(sgLightEditorFlarePanel) {
            canSaveDynamicFields = "0";
            Profile = "GuiWindowProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "6 42";
            Extent = "160 151";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "0";
            hovertime = "1000";

            new GuiCheckBoxCtrl(sgLightEditorFlareConstantSize) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "14 35";
               Extent = "77 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Constant Size";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorFlareOn) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "14 5";
               Extent = "66 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Enabled";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorFlareBlendMode) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "14 20";
               Extent = "65 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Blend Mode";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiTextEditCtrl(sgLightEditorFlareFileName) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "30 61";
               Extent = "122 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 61";
               Extent = "18 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "File:";
               maxLength = "255";
            };
            new GuiTextEditCtrl(sgLightEditorFlareSizeNear) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 83";
               Extent = "33 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 83";
               Extent = "43 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Size Near:";
               maxLength = "255";
            };
            new GuiTextEditCtrl(sgLightEditorFlareSizeFar) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "119 83";
               Extent = "33 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "96 83";
               Extent = "17 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Far:";
               maxLength = "255";
            };
            new GuiTextEditCtrl(sgLightEditorFlareDistanceNear) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 105";
               Extent = "33 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 105";
               Extent = "43 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Dist Near:";
               maxLength = "255";
            };
            new GuiTextEditCtrl(sgLightEditorFlareDistanceFar) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "119 105";
               Extent = "33 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "96 105";
               Extent = "17 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Far:";
               maxLength = "255";
            };
            new GuiTextEditCtrl(sgLightEditorFlareFadeTime) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "60 127";
               Extent = "92 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 127";
               Extent = "47 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Fade Time:";
               maxLength = "255";
            };
         };
         new GuiControl(sgLightEditorAnimationPanel) {
            canSaveDynamicFields = "0";
            Profile = "GuiWindowProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "6 42";
            Extent = "160 151";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "0";
            hovertime = "1000";

            new GuiCheckBoxCtrl(sgLightEditorAnimationRadiusOn) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "107 5";
               Extent = "48 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Radius";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorAnimationColorOn) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 5";
               Extent = "41 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Color";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiCheckBoxCtrl(sgLightEditorAnimationIntensityOn) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "50 5";
               Extent = "55 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               text = "Intensity";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
            new GuiTextEditCtrl(sgLightEditorAnimationIntensity2Time) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "118 127";
               Extent = "34 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "89 127";
               Extent = "23 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Time:";
               maxLength = "255";
            };
            new GuiTextEditCtrl(sgLightEditorAnimationRadius2Time) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "118 107";
               Extent = "34 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "89 107";
               Extent = "23 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Time:";
               maxLength = "255";
            };
            new GuiTextEditCtrl(sgLightEditorAnimationRadius2) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "49 107";
               Extent = "34 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 107";
               Extent = "37 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Radius2:";
               maxLength = "255";
            };
            new GuiTextEditCtrl(sgLightEditorAnimationIntensity2) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "57 127";
               Extent = "26 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 127";
               Extent = "45 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Intensity2:";
               maxLength = "255";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 28";
               Extent = "30 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Color2:";
               maxLength = "255";
            };
            new GuiSliderCtrl(sgLightEditorAnimationColor2Red) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 26";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "0";
            };
            new GuiSliderCtrl(sgLightEditorAnimationColor2Green) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 46";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "0";
            };
            new GuiSliderCtrl(sgLightEditorAnimationColor2Blue) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 66";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "0";
            };
            new GuiTextEditCtrl(sgLightEditorAnimationColor2Time) {
               canSaveDynamicFields = "0";
               Profile = "GuiTextEditProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "118 87";
               Extent = "34 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorLightEditorPanel.setDB();";
               hovertime = "1000";
               maxLength = "255";
               historySize = "0";
               password = "0";
               tabComplete = "0";
               sinkAllKeyEvents = "0";
               password = "0";
               passwordMask = "*";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "89 87";
               Extent = "23 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Time:";
               maxLength = "255";
            };
         };
      };
      new GuiButtonCtrl() {
         canSaveDynamicFields = "0";
         Profile = "GuiButtonProfile";
         HorizSizing = "right";
         VertSizing = "bottom";
         position = "44 382";
         Extent = "40 16";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "0";
         Command = "sgLightEditor::newDB(true);";
         hovertime = "1000";
         text = "Clone";
         groupNum = "-1";
         buttonType = "PushButton";
      };
      new GuiTextCtrl() {
         canSaveDynamicFields = "0";
         Profile = "GuiTextProfile";
         HorizSizing = "right";
         VertSizing = "bottom";
         position = "13 249";
         Extent = "56 16";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "1";
         hovertime = "1000";
         text = "Filter Radius:";
         maxLength = "255";
      };
      new GuiButtonCtrl() {
         canSaveDynamicFields = "0";
         Profile = "GuiButtonProfile";
         HorizSizing = "right";
         VertSizing = "bottom";
         position = "124 382";
         Extent = "40 16";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "0";
         Command = "sgLightEditor::restoreDB();";
         hovertime = "1000";
         text = "Restore";
         groupNum = "-1";
         buttonType = "PushButton";
      };
      new GuiButtonCtrl() {
         canSaveDynamicFields = "0";
         Profile = "GuiButtonProfile";
         HorizSizing = "right";
         VertSizing = "bottom";
         position = "7 427";
         Extent = "153 16";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "0";
         Command = "sgLightEditor::filteredRelight();";
         hovertime = "1000";
         text = "Filtered Relight";
         groupNum = "-1";
         buttonType = "PushButton";
      };
      new GuiButtonCtrl() {
         canSaveDynamicFields = "0";
         Profile = "GuiButtonProfile";
         HorizSizing = "right";
         VertSizing = "bottom";
         position = "84 382";
         Extent = "40 16";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "0";
         Command = "sgLightEditor::saveDB();";
         hovertime = "1000";
         text = "Save";
         groupNum = "-1";
         buttonType = "PushButton";
      };
      new GuiButtonCtrl() {
         canSaveDynamicFields = "0";
         Profile = "GuiButtonProfile";
         HorizSizing = "right";
         VertSizing = "bottom";
         position = "4 382";
         Extent = "40 16";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "0";
         Command = "sgLightEditor::newDB(false);";
         hovertime = "1000";
         text = "New";
         groupNum = "-1";
         buttonType = "PushButton";
      };
      new GuiMenuBar(sgLightEditorMenuBar) {
         canSaveDynamicFields = "0";
         Profile = "GuiMenuBarProfile";
         HorizSizing = "width";
         VertSizing = "bottom";
         position = "2 24";
         Extent = "168 18";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "1";
         hovertime = "1000";
         Padding = "0";
      };
      new GuiTextEditCtrl(sgLightEditorFilterRadius) {
         canSaveDynamicFields = "0";
         Profile = "GuiTextEditProfile";
         HorizSizing = "right";
         VertSizing = "bottom";
         position = "76 249";
         Extent = "82 16";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "1";
         Variable = "$SceneLighting::sgFilterRelightByDistanceRadius";
         hovertime = "1000";
         maxLength = "255";
         historySize = "0";
         password = "0";
         tabComplete = "0";
         sinkAllKeyEvents = "0";
         password = "0";
         passwordMask = "*";
      };
      new GuiControl(sgLightEditorCinematicFilterEditorPanel) {
         canSaveDynamicFields = "0";
         Profile = "GuiDefaultProfile";
         HorizSizing = "right";
         VertSizing = "bottom";
         position = "0 48";
         Extent = "171 197";
         MinExtent = "8 2";
         canSave = "1";
         Visible = "0";
         hovertime = "1000";

         new GuiPopUpMenuCtrl(sgFilterDBList) {
            canSaveDynamicFields = "0";
            Profile = "GuiPopUpMenuProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "51 3";
            Extent = "115 16";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            hovertime = "1000";
            maxLength = "255";
            maxPopupHeight = "200";
         };
         new GuiTextCtrl() {
            canSaveDynamicFields = "0";
            Profile = "GuiTextProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "6 3";
            Extent = "40 16";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            hovertime = "1000";
            text = "Filter DB:";
            maxLength = "255";
         };
         new GuiControl(sgLightEditorCinematicFilterEditorColorPanel) {
            canSaveDynamicFields = "0";
            Profile = "GuiWindowProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "6 42";
            Extent = "160 151";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            hovertime = "1000";

            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 7";
               Extent = "25 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Color:";
               maxLength = "255";
            };
            new GuiSliderCtrl(sgLightEditorCinematicFilterEditorColorRed) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 5";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorCinematicFilterEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "1";
            };
            new GuiSliderCtrl(sgLightEditorCinematicFilterEditorColorGreen) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 26";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorCinematicFilterEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "1";
            };
            new GuiSliderCtrl(sgLightEditorCinematicFilterEditorColorBlue) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 47";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorCinematicFilterEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "1";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 74";
               Extent = "40 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Intensity:";
               maxLength = "255";
            };
            new GuiSliderCtrl(sgLightEditorCinematicFilterEditorIntensity) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 72";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorCinematicFilterEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 2";
               ticks = "10";
               value = "0.425287";
            };
         };
         new GuiButtonCtrl(sgLightEditorCinematicFilterEditorColorButton) {
            canSaveDynamicFields = "0";
            Profile = "GuiButtonProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "6 27";
            Extent = "38 16";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            Command = "sgLightEditor.setFilterEditorPanel(sgLightEditorCinematicFilterEditorColorPanel);";
            hovertime = "1000";
            text = "Color";
            groupNum = "-1";
            buttonType = "RadioButton";
         };
         new GuiButtonCtrl() {
            canSaveDynamicFields = "0";
            Profile = "GuiButtonProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "43 27";
            Extent = "84 16";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "1";
            Command = "sgLightEditor.setFilterEditorPanel(sgLightEditorCinematicFilterEditorFilterPanel);";
            hovertime = "1000";
            text = "Cinematic Filter";
            groupNum = "-1";
            buttonType = "RadioButton";
         };
         new GuiControl(sgLightEditorCinematicFilterEditorFilterPanel) {
            canSaveDynamicFields = "0";
            Profile = "GuiWindowProfile";
            HorizSizing = "right";
            VertSizing = "bottom";
            position = "6 42";
            Extent = "160 151";
            MinExtent = "8 2";
            canSave = "1";
            Visible = "0";
            hovertime = "1000";

            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 28";
               Extent = "25 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Color:";
               maxLength = "255";
            };
            new GuiSliderCtrl(sgLightEditorCinematicFilterEditorFilterColorRed) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 26";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorCinematicFilterEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "1";
            };
            new GuiSliderCtrl(sgLightEditorCinematicFilterEditorFilterColorGreen) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 47";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorCinematicFilterEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "1";
            };
            new GuiSliderCtrl(sgLightEditorCinematicFilterEditorFilterColorBlue) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 68";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorCinematicFilterEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 1";
               ticks = "10";
               value = "1";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 96";
               Extent = "40 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Intensity:";
               maxLength = "255";
            };
            new GuiSliderCtrl(sgLightEditorCinematicFilterEditorFilterIntensity) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 94";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorCinematicFilterEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 2";
               ticks = "10";
               value = "1";
            };
            new GuiTextCtrl() {
               canSaveDynamicFields = "0";
               Profile = "GuiTextProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 123";
               Extent = "35 16";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               hovertime = "1000";
               text = "Amount:";
               maxLength = "255";
            };
            new GuiSliderCtrl(sgLightEditorCinematicFilterEditorFilterAmount) {
               canSaveDynamicFields = "0";
               Profile = "GuiSliderProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "55 121";
               Extent = "97 21";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorCinematicFilterEditorPanel.setDB();";
               hovertime = "1000";
               range = "0 2";
               ticks = "10";
               value = "1";
            };
            new GuiCheckBoxCtrl(sgLightEditorCinematicFilterEditorFilterOn) {
               canSaveDynamicFields = "0";
               Profile = "GuiCheckBoxProfile";
               HorizSizing = "right";
               VertSizing = "bottom";
               position = "7 5";
               Extent = "119 22";
               MinExtent = "8 2";
               canSave = "1";
               Visible = "1";
               Command = "sgLightEditorCinematicFilterEditorPanel.setDB();";
               hovertime = "1000";
               text = "Enable Cinematic Filter";
               groupNum = "-1";
               buttonType = "ToggleButton";
               useInactiveState = "0";
            };
         };
      };
   };
};
//--- OBJECT WRITE END ---

sgLightEditor.activePanel = "";
sgLightEditorLightEditorPanel.currentDBName = "";
sgLightEditorCinematicFilterEditorPanel.currentDBName = "";

function sgLightEditorMenuBar::onMenuItemSelect(%this, %menuId, %menu, %itemId, %item)
{
	if(%this.scriptCommand[%menu, %itemId] !$= "")
		eval(%this.scriptCommand[%menu, %itemId]);
	else
		error("No script command defined for menu " @ %menu  @ " item " @ %item);
}

function sgLightEditor::setPanel(%this, %panel)
{
	for(%i=0; %i<%this.constants_panelCount; %i++)
	{
		%this.constants_panel[%i].visible = false;
	}

	%panel.visible = true;
	%this.activePanel = %panel;
	//%panel.setGui();
	
	//echo("trying to set the list item (should kick off the DB lookup)");
	echo(%this.activePanel.datablockType_list);
	echo(%this.activePanel.currentDBName);
	echo(%this.activePanel.datablockType_list.findText(%this.activePanel.currentDBName));
	%this.activePanel.datablockType_list.setSelected(%this.activePanel.datablockType_list.findText(%this.activePanel.currentDBName));
	
	//echo("what panel is this???");
	//echo(%panel);
	
	sgLightEditor.setText("Light Editor: " @ %this.activePanel.datablockType_text);
}

function sgLightEditor::setLightEditorPanel(%this, %panel)
{
	for(%i=0; %i<%this.constants_lightEditor_panelCount; %i++)
	{
		%this.constants_lightEditor_panel[%i].visible = false;
	}

	%panel.visible = true;
}

function sgLightEditor::setFilterEditorPanel(%this, %panel)
{
	for(%i=0; %i<%this.constants_filterEditor_panelCount; %i++)
	{
		%this.constants_filterEditor_panel[%i].visible = false;
	}

	%panel.visible = true;
}

function sgLightEditor::findDataBlocks(%this, %path, %list, %panel)
{
	%list.clear();

	%file = findFirstFile(%path @ "*.cs");
	%i = 0;
  
	while(%file !$= "")
	{
		%file = fileBase(%file);
		%list.add(%file, %i);
		%file = findNextFile(%path @ "*.cs");
		%i++;
	}

	%list.sort();
	
	//if(%panel.currentDBName $= "")
	//	%list.setSelected(0);
	//else
	//	%list.setSelected(%list.findText(%panel.currentDBName));
}

function sgLightEditor::findLightingModels(%this)
{
	sgLightingModelList.clear();
	
	%count = sgLightingModelCount();
	//echo(%count);
	for(%i=0; %i<%count; %i++)
	{
		sgLightingModelList.add(sgLightingModelName(%i), %i);
	}
}

function sgLightEditor::resetLightAnimations(%this)
{
	%count = LightSet.getCount();
	//echo(%count);
	for(%i=0; %i<%count; %i++)
	{
		%light = LightSet.getObject(%i);
		if(isObject(%light))
			%light.reset();
	}
}

function sgLightEditor::onWake(%this)
{
	sgLightEditorLightEditorPanel.datablockType_name = "sgLightObjectData";
	sgLightEditorLightEditorPanel.datablockType_path = $sgLightEditor::lightDBPath;
	sgLightEditorLightEditorPanel.datablockType_list = sgLightDBList;
	sgLightEditorLightEditorPanel.datablockType_text = "Light Editor";
	
	sgLightEditorCinematicFilterEditorPanel.datablockType_name = "sgMissionLightingFilterData";
	sgLightEditorCinematicFilterEditorPanel.datablockType_path = $sgLightEditor::filterDBPath;
	sgLightEditorCinematicFilterEditorPanel.datablockType_list = sgFilterDBList;
	sgLightEditorCinematicFilterEditorPanel.datablockType_text = "Filter Editor";
	
	%this.constants_panel[0] = sgLightEditorLightEditorPanel;
	%this.constants_panel[1] = sgLightEditorCinematicFilterEditorPanel;
	%this.constants_panelCount = 2;
	
	%this.constants_lightEditor_panel[0] = sgLightEditorTypePanel;
	%this.constants_lightEditor_panel[1] = sgLightEditorColorPanel;
	%this.constants_lightEditor_panel[2] = sgLightEditorFlarePanel;
	%this.constants_lightEditor_panel[3] = sgLightEditorAnimationPanel;
	%this.constants_lightEditor_panelCount = 4;
	
	%this.constants_filterEditor_panel[0] = sgLightEditorCinematicFilterEditorColorPanel;
	%this.constants_filterEditor_panel[1] = sgLightEditorCinematicFilterEditorFilterPanel;
	%this.constants_filterEditor_panelCount = 2;
	
	%this.constants_menuName[0] = "File";
	%this.constants_menuName[1] = "Relight";
	%this.constants_menuName[2] = "Editor";
	%this.constants_menuName[3] = "Quality";

	%this.constants_menuId[%this.constants_menuName[0]] = 0;
	%this.constants_menuId[%this.constants_menuName[1]] = 1;
	%this.constants_menuId[%this.constants_menuName[2]] = 2;
	%this.constants_menuId[%this.constants_menuName[3]] = 3;
	
	%this.constants_quality_menuItemId[0] = 100;
	%this.constants_quality_menuItemId[1] = 101;
	%this.constants_quality_menuItemId[2] = 102;
	%this.constants_quality_menuItemId["shadows"] = 1000;
	%this.constants_quality_menuItemId["drl"] = 1001;
	%this.constants_quality_menuItemId["bloom"] = 1002;
	%this.constants_quality_menuItemId["tonemapping"] = 1003;

	sgClearFieldMapping(sgLightEditorLightEditorPanel);
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorEffectsDTSObjects", "EffectsDTSObjects");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorSpotAngle", "SpotAngle");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorSpotLight", "SpotLight");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorIntensity", "Brightness");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorAmbient", "LocalAmbientAmount");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorStaticLight", "StaticLight");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorLightOn", "LightOn");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorShadows", "CastsShadows");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorRestrictZoneDiffuse", "DiffuseRestrictZone");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorRestrictZoneAmbient", "AmbientRestrictZone");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorSmoothing", "SmoothSpotLight");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorTwoSidedAmbient", "DoubleSidedAmbient");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorRadius", "Radius");

	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorFlareConstantSize", "ConstantSizeOn");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorFlareOn", "FlareOn");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorFlareBlendMode", "BlendMode");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorFlareFileName", "FlareBitmap");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorFlareSizeNear", "NearSize");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorFlareSizeFar", "FarSize");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorFlareDistanceNear", "NearDistance");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorFlareDistanceFar", "FarDistance");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorFlareFadeTime", "FadeTime");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorAnimationRadiusOn", "AnimRadius");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorAnimationColorOn", "AnimColour");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorAnimationIntensityOn", "AnimBrightness");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorAnimationIntensity2Time", "BrightnessTime");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorAnimationRadius2Time", "RadiusTime");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorAnimationRadius2", "MinRadius");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorAnimationIntensity2", "MinBrightness");
	sgAddFieldMapping(sgLightEditorLightEditorPanel, "sgLightEditorAnimationColor2Time", "ColourTime");

	sgLightEditorStaticLight.fieldDependency = sgLightEditorLightOn;
	sgLightEditorRestrictZoneDiffuse.fieldDependency = sgLightEditorLightOn;
	sgLightEditorIntensity.fieldDependency = sgLightEditorLightOn;
	sgLightEditorRadius.fieldDependency = sgLightEditorLightOn;
	sgLightEditorFlareOn.fieldDependency = sgLightEditorLightOn;
	sgLightEditorAnimationRadiusOn.fieldDependency = sgLightEditorLightOn;
	sgLightEditorAnimationColorOn.fieldDependency = sgLightEditorLightOn;
	sgLightEditorAnimationIntensityOn.fieldDependency = sgLightEditorLightOn;
	sgLightEditorTwoSidedAmbient.fieldDependency = sgLightEditorLightOn;
	sgLightEditorShadows.fieldDependency = sgLightEditorLightOn;
	sgLightEditorSpotLight.fieldDependency = sgLightEditorLightOn;

	sgLightEditorRestrictZoneAmbient.fieldDependency = sgLightEditorStaticLight;
	sgLightEditorEffectsDTSObjects.fieldDependency = sgLightEditorStaticLight;
	sgLightEditorAmbient.fieldDependency = sgLightEditorStaticLight;

	sgLightEditorSmoothing.fieldDependency = sgLightEditorSpotLight;
	sgLightEditorSpotAngle.fieldDependency = sgLightEditorSpotLight;

	sgLightEditorFlareConstantSize.fieldDependency = sgLightEditorFlareOn;
	sgLightEditorFlareBlendMode.fieldDependency = sgLightEditorFlareOn;
	sgLightEditorFlareFileName.fieldDependency = sgLightEditorFlareOn;
	sgLightEditorFlareSizeNear.fieldDependency = sgLightEditorFlareOn;
	sgLightEditorFlareSizeFar.fieldDependency = sgLightEditorFlareOn;
	sgLightEditorFlareDistanceNear.fieldDependency = sgLightEditorFlareOn;
	sgLightEditorFlareDistanceFar.fieldDependency = sgLightEditorFlareOn;
	sgLightEditorFlareFadeTime.fieldDependency = sgLightEditorFlareOn;

	sgLightEditorAnimationRadius2.fieldDependency = sgLightEditorAnimationRadiusOn;
	sgLightEditorAnimationRadius2Time.fieldDependency = sgLightEditorAnimationRadiusOn;

	sgLightEditorAnimationIntensity2.fieldDependency = sgLightEditorAnimationIntensityOn;
	sgLightEditorAnimationIntensity2Time.fieldDependency = sgLightEditorAnimationIntensityOn;

	sgLightEditorAnimationColor2Time.fieldDependency = sgLightEditorAnimationColorOn;
	
	sgClearFieldMapping(sgLightEditorCinematicFilterEditorPanel);
	sgAddFieldMapping(sgLightEditorCinematicFilterEditorPanel, "sgLightEditorCinematicFilterEditorIntensity", "LightingIntensity");
	sgAddFieldMapping(sgLightEditorCinematicFilterEditorPanel, "sgLightEditorCinematicFilterEditorFilterOn", "CinematicFilter");
	sgAddFieldMapping(sgLightEditorCinematicFilterEditorPanel, "sgLightEditorCinematicFilterEditorFilterAmount", "CinematicFilterAmount");
	sgAddFieldMapping(sgLightEditorCinematicFilterEditorPanel, "sgLightEditorCinematicFilterEditorFilterIntensity", "CinematicFilterReferenceIntensity");
	
	sgLightEditorCinematicFilterEditorFilterAmount.fieldDependency = sgLightEditorCinematicFilterEditorFilterOn;
	sgLightEditorCinematicFilterEditorFilterIntensity.fieldDependency = sgLightEditorCinematicFilterEditorFilterOn;

	sgLightEditorMenuBar.clearMenus();
	
	%menuname = %this.constants_menuName[0];
	%menuid = %this.constants_menuId[%menuname];

	sgLightEditorMenuBar.addMenu(%menuname, %menuid);
	%i = 1;
	sgLightEditorMenuBar.addMenuItem(%menuname, "New...", %i);
	sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.newDB(false);";
	%i = %i + 1;
	sgLightEditorMenuBar.addMenuItem(%menuname, "Clone...", %i);
	sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.newDB(true);";
	sgLightEditorMenuBar.addMenuItem(%menuname, "-", 0);
	%i = %i + 1;
	sgLightEditorMenuBar.addMenuItem(%menuname, "Save", %i);
	sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.saveDB();";
	%i = %i + 1;
	sgLightEditorMenuBar.addMenuItem(%menuname, "Restore", %i);
	sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.restoreDB();";

	%menuname = %this.constants_menuName[2];
	%menuid = %this.constants_menuId[%menuname];

	sgLightEditorMenuBar.addMenu(%menuname, %menuid);
	%i = 1;
	sgLightEditorMenuBar.addMenuItem(%menuname, "Light Editor", %i);
	sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.setPanel(sgLightEditorLightEditorPanel);";
	%i = %i + 1;
	sgLightEditorMenuBar.addMenuItem(%menuname, "Cinematic Filter Editor", %i);
	sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.setPanel(sgLightEditorCinematicFilterEditorPanel);";

	//%menuname = %this.constants_menuName[3];
	//%menuid = %this.constants_menuId[%menuname];

	//sgLightEditorMenuBar.addMenu(%menuname, %menuid);
	//%i = %this.constants_quality_menuItemId[0];
	//sgLightEditorMenuBar.addMenuItem(%menuname, "Production", %i, "", 1);
	//sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.setQuality(0);";
	//%i = %this.constants_quality_menuItemId[1];
	//sgLightEditorMenuBar.addMenuItem(%menuname, "Design", %i, "", 1);
	//sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.setQuality(1);";
	//%i = %this.constants_quality_menuItemId[2];
	//sgLightEditorMenuBar.addMenuItem(%menuname, "Draft", %i, "", 1);
	//sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.setQuality(2);";
	//sgLightEditorMenuBar.addMenuItem(%menuname, "-", 0);
	//%i = %this.constants_quality_menuItemId["shadows"];
	//sgLightEditorMenuBar.addMenuItem(%menuname, "Shadows", %i, "", 2);
	//sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.setShadows(!$pref::LightManager::sgLightingProfileAllowShadows);";

	//sgLightEditorMenuBar.addMenuItem(%menuname, "-", 0);
	//%i = %this.constants_quality_menuItemId["drl"];
	//sgLightEditorMenuBar.addMenuItem(%menuname, "Dynamic Range Lighting", %i, "", 3);
	//sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.setDRL(!$pref::LightManager::sgUseDynamicRangeLighting);";
	//%i = %this.constants_quality_menuItemId["bloom"];
	//sgLightEditorMenuBar.addMenuItem(%menuname, "Bloom", %i, "", 4);
	//sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.setBloom(!$pref::LightManager::sgUseBloom);";
	//%i = %this.constants_quality_menuItemId["tonemapping"];
	//sgLightEditorMenuBar.addMenuItem(%menuname, "Full Screen Cinematic Filtering", %i, "", 5);
	//sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.setToneMapping(!$pref::LightManager::sgUseToneMapping);";

	//%menuname = %this.constants_menuName[1];
	//%menuid = %this.constants_menuId[%menuname];

	//sgLightEditorMenuBar.addMenu(%menuname, %menuid);
	//%i = 1;
	//sgLightEditorMenuBar.addMenuItem(%menuname, "Filtered Relight", %i);
	//sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.filteredRelight();";
	//sgLightEditorMenuBar.addMenuItem(%menuname, "-", 0);
	//%i = %i + 1;
	//sgLightEditorMenuBar.addMenuItem(%menuname, "Full Relight", %i);
	//sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "lightScene(\"filteredRelightComplete\", forceAlways);";
	//sgLightEditorMenuBar.addMenuItem(%menuname, "-", 0);
	//%i = %i + 1;
	//sgLightEditorMenuBar.addMenuItem(%menuname, "Reset All Light Animation", %i);
	//sgLightEditorMenuBar.scriptCommand[%menuname, %i] = "sgLightEditor.resetLightAnimations();";

	// load first!
	%this.findLightingModels();
	%this.findDataBlocks($sgLightEditor::lightDBPath, sgLightDBList, sgLightEditorLightEditorPanel);
	%this.findDataBlocks($sgLightEditor::filterDBPath, sgFilterDBList, sgLightEditorCinematicFilterEditorPanel);

	// set the active panel next...
	echo("onwake state");
	echo(%this.activePanel);
	if(!isObject(%this.activePanel))
		%this.setPanel(sgLightEditorLightEditorPanel);
	else
		%this.setPanel(%this.activePanel);
	
	//echo("calling activePanel.setGUI();");
	//%this.activePanel.setGui();
	//echo("done");
	
	sgLightEditorTypeButton.performClick();
	sgLightEditorCinematicFilterEditorColorButton.performClick();
	
	$SceneLighting::sgFilterRelightVisible = true;
	
	%this.setQuality($pref::LightManager::sgLightingProfileQuality);
	%this.setShadows($pref::LightManager::sgLightingProfileAllowShadows);
	%this.setDRL($pref::LightManager::sgUseDynamicRangeLighting);
	%this.setBloom($pref::LightManager::sgUseBloom);
	%this.setToneMapping($pref::LightManager::sgUseToneMapping);
}

function sgLightEditor::onSleep(%this)
{
	%this.state = 0;

	$SceneLighting::sgFilterRelightVisible = false;
}

function sgLightEditor::toggle(%this)
{
	//echo("sgLightEditor::toggle()");
	if(%this.state == 0)
	{
		canvas.pushdialog(sgLightEditor);
		%this.state = 1;
	}
	else
	{
		canvas.popdialog(sgLightEditor);
		%this.state = 0;
	}
}


//-----------------------------------------------
// datablock streaming
//-----------------------------------------------

function sgLightEditor::newDB(%this, %clone)
{
	sgLightEditorNewDB.clone = %clone;
	Canvas.pushDialog(sgLightEditorNewDB);
}

function sgLightEditor::createDB(%this, %name)
{
	%path = %this.activePanel.datablockType_path @ %name @ ".cs";
	
	if(!isFile(%path))
	{
		%file = new FileObject();
		%file.openForWrite(%path);
		%file.writeLine("//--- OBJECT WRITE BEGIN ---");
		%file.writeLine("datablock " @ %this.activePanel.datablockType_name @ "(" @ %name @ ") {");
		%file.writeLine("className = \"" @ %this.activePanel.datablockType_name @ "\";");
		%file.writeLine("};");
		%file.writeLine("//--- OBJECT WRITE END ---");
		%file.delete();
	
		exec(%path);
		
		%this.onWake();
	}
	
	echo("Creating new db...");
	echo(%this.activePanel);
	echo(%this.activePanel.datablockType_list);
	echo(%name);
	echo("Done.");
	
	%this.activePanel.datablockType_list.setSelected(%this.activePanel.datablockType_list.findText(%name));
}

function sgLightEditor::cloneDB(%this, %name)
{
	%path = %this.activePanel.datablockType_path @ %name @ ".cs";
	%this.activePanel.currentDB.save(%path);
	
	//update file to define datablock...
	%file = new FileObject();
	%file.openForRead(%path);
	%line = "";
	while(!%file.isEOF())
		%line = %line @ %file.readLine() @ "\n";
	%file.delete();
	
	%line = strreplace(%line, "//--- OBJECT WRITE BEGIN ---\nnew", "//--- OBJECT WRITE BEGIN ---\ndatablock");
	%line = strreplace(%line, %this.activePanel.currentDBName, %name);
	
	%file = new FileObject();
	%file.openForWrite(%path);
	%file.writeLine(%line);
	%file.delete();
	
	exec(%path);
	
	%this.onWake();
	%this.activePanel.datablockType_list.setSelected(%this.activePanel.datablockType_list.findText(%name));
}

function sgLightEditor::saveDB(%this)
{
	%path = %this.activePanel.datablockType_path @ %this.activePanel.currentDBName @ ".cs";
	%this.activePanel.currentDB.save(%path);
	
	//update file to define datablock...
	%file = new FileObject();
	%file.openForRead(%path);
	%line = "";
	while(!%file.isEOF())
		%line = %line @ %file.readLine() @ "\n";
	%file.delete();
	
	%line = strreplace(%line, "//--- OBJECT WRITE BEGIN ---\nnew", "//--- OBJECT WRITE BEGIN ---\ndatablock");
	
	//%line = strreplace(%line, "sgUniversalStaticLightData", "sgLightObjectData");
	
	%file = new FileObject();
	%file.openForWrite(%path);
	%file.writeLine(%line);
	%file.delete();
}

function sgLightEditor::restoreDB(%this)
{
	%path = %this.activePanel.datablockType_path @ %this.activePanel.currentDBName @ ".cs";
	exec(%path);
	%this.activePanel.setGui();
}


//-----------------------------------------------
// Synapse Gaming GUI Framework
//-----------------------------------------------

function sgClearFieldMapping(%obj)
{
	%obj.sgFieldCount = 0;
}

function sgAddFieldMapping(%obj, %windowfield, %datablockfield)
{
	%obj.sgWindowField[%obj.sgFieldCount] = %windowfield;
	%obj.sgDatablockField[%obj.sgFieldCount] = %datablockfield;
	%obj.sgFieldCount = %obj.sgFieldCount + 1;

	%windowfield.fieldDependency = "";
}

function sgProcessFields(%obj)
{
	//echo("sgProcessFields");
	//echo(%obj.sgFieldCount);

	for(%i=0; %i<%obj.sgFieldCount; %i++)
	{
		sgProcessField(%obj, %obj.sgWindowField[%i]);
	}
}

function sgProcessField(%obj, %field)
{
	//echo("sgLightEditor::processField");
	//echo(%field);

	%dep = %field.fieldDependency;
	if(!isObject(%dep))
		return;

	//echo("Found dependency...");

	sgProcessField(%obj, %dep);

	if(%dep.isActive() && (%dep.getValue() $= "1"))
	{
		%field.setActive(true);
	  //echo("Setting " @ %field @ " active.");
	}
	else
	{
		%field.setActive(false);
	  //echo("Setting " @ %field @ " inactive.");
	}
}


//-----------------------------------------------
// panel specific code
//-----------------------------------------------

function sgLightEditorLightEditorPanel::setDB(%this)
{
	%color = sgLightEditorColorRed.value @ " " @
				sgLightEditorColorGreen.value @ " " @
				sgLightEditorColorBlue.value;
	%this.currentDB.Colour = %color;
	%this.currentDB.MaxColour = %color;

	%color = sgLightEditorAnimationColor2Red.value @ " " @
				sgLightEditorAnimationColor2Green.value @ " " @
				sgLightEditorAnimationColor2Blue.value;
	%this.currentDB.MinColour = %color;

	//echo(%this.sgFieldCount);

	for(%i=0; %i<%this.sgFieldCount; %i++)
	{
		%cmd = "%this.currentDB." @ %this.sgDatablockField[%i] @
			" = " @ %this.sgWindowField[%i] @ ".getValue();";
		//echo(%cmd);
		eval(%cmd);
	}

	%this.currentDB.ConstantSize = %this.currentDB.NearSize;
	%this.currentDB.MaxBrightness = %this.currentDB.Brightness;
	%this.currentDB.MaxRadius = %this.currentDB.Radius;

	%this.currentDB.LightingModelName = sgLightingModelList.getText();

	sgProcessFields(%this);
}

function sgLightEditorLightEditorPanel::setGui(%this)
{
	//echo("what db is this???");
	//echo(%this.currentDB);
	//echo(%this.currentDBName);
	
	%r = getWord(%this.currentDB.Colour, 0);
	%g = getWord(%this.currentDB.Colour, 1);
	%b = getWord(%this.currentDB.Colour, 2);
	sgLightEditorColorRed.setValue(%r);
	sgLightEditorColorGreen.setValue(%g);
	sgLightEditorColorBlue.setValue(%b);

	%r = getWord(%this.currentDB.MinColour, 0);
	%g = getWord(%this.currentDB.MinColour, 1);
	%b = getWord(%this.currentDB.MinColour, 2);
	sgLightEditorAnimationColor2Red.setValue(%r);
	sgLightEditorAnimationColor2Green.setValue(%g);
	sgLightEditorAnimationColor2Blue.setValue(%b);

	//echo(%this.sgFieldCount);

	for(%i=0; %i<%this.sgFieldCount; %i++)
	{
		%cmd = %this.sgWindowField[%i] @ ".setValue(%this.currentDB." @
			%this.sgDatablockField[%i] @ ");";
		//echo(%cmd);
		eval(%cmd);
	}
	
	sgLightingModelList.setSelected(sgLightingModelList.findText(%this.currentDB.LightingModelName));

	sgProcessFields(%this);
}

function sgLightEditorCinematicFilterEditorPanel::setDB(%this)
{
	%color = sgLightEditorCinematicFilterEditorColorRed.value @ " " @
				sgLightEditorCinematicFilterEditorColorGreen.value @ " " @
				sgLightEditorCinematicFilterEditorColorBlue.value;
	%this.currentDB.LightingFilter = %color;
	
	%color = sgLightEditorCinematicFilterEditorFilterColorRed.value @ " " @
				sgLightEditorCinematicFilterEditorFilterColorGreen.value @ " " @
				sgLightEditorCinematicFilterEditorFilterColorBlue.value;
	%this.currentDB.CinematicFilterReferenceColor = %color;

	//echo(%this.sgFieldCount);

	for(%i=0; %i<%this.sgFieldCount; %i++)
	{
		%cmd = "%this.currentDB." @ %this.sgDatablockField[%i] @
			" = " @ %this.sgWindowField[%i] @ ".getValue();";
		//echo(%cmd);
		eval(%cmd);
	}

	sgProcessFields(%this);
}

function sgLightEditorCinematicFilterEditorPanel::setGui(%this)
{
	%r = getWord(%this.currentDB.LightingFilter, 0);
	%g = getWord(%this.currentDB.LightingFilter, 1);
	%b = getWord(%this.currentDB.LightingFilter, 2);
	sgLightEditorCinematicFilterEditorColorRed.setValue(%r);
	sgLightEditorCinematicFilterEditorColorGreen.setValue(%g);
	sgLightEditorCinematicFilterEditorColorBlue.setValue(%b);
	
	%r = getWord(%this.currentDB.CinematicFilterReferenceColor, 0);
	%g = getWord(%this.currentDB.CinematicFilterReferenceColor, 1);
	%b = getWord(%this.currentDB.CinematicFilterReferenceColor, 2);
	sgLightEditorCinematicFilterEditorFilterColorRed.setValue(%r);
	sgLightEditorCinematicFilterEditorFilterColorGreen.setValue(%g);
	sgLightEditorCinematicFilterEditorFilterColorBlue.setValue(%b);

	//echo(%this.sgFieldCount);

	for(%i=0; %i<%this.sgFieldCount; %i++)
	{
		%cmd = %this.sgWindowField[%i] @ ".setValue(%this.currentDB." @
			%this.sgDatablockField[%i] @ ");";
		//echo(%cmd);
		eval(%cmd);
	}

	sgProcessFields(%this);
}


//-----------------------------------------------
// datablock id info
//-----------------------------------------------

function clientCmdsgGetLightDBIdCallback(%id)
{
	echo("clientCmdsgGetLightDBIdCallback");
	sgLightEditor.activePanel.currentDB = %id;
	sgLightEditor.activePanel.setGui();
}

function sgLightDBList::onSelect(%this, %id, %text)
{
	if(sgLightEditor.activePanel != sgLightEditorLightEditorPanel)
	{
		error("sgLightDBList::onSelect> Error Light Editor panel not set.");
	  return;
	}
	
	sgLightEditor.activePanel.currentDBName = sgLightDBList.getText();  
	//commandToServer('sgGetLightDBId', sgLightEditor.activePanel.currentDBName);
	//this never used to work...
	sgLightEditor.activePanel.currentDB = nameToId(sgLightEditor.activePanel.currentDBName);
	//echo(sgLightEditor.activePanel.currentDBName);
	//echo(sgLightEditor.activePanel.currentDB);
	sgLightEditor.activePanel.setGui();
}

function sgFilterDBList::onSelect(%this, %id, %text)
{
	if(sgLightEditor.activePanel != sgLightEditorCinematicFilterEditorPanel)
	{
		error("sgFilterDBList::onSelect> Error Filter Editor panel not set.");
	  return;
	}
	
	sgLightEditor.activePanel.currentDBName = sgFilterDBList.getText();  
	//commandToServer('sgGetLightDBId', sgLightEditor.activePanel.currentDBName);
	sgLightEditor.activePanel.currentDB = nameToId(sgLightEditor.activePanel.currentDBName);
	//echo(sgLightEditor.activePanel.currentDBName);
	//echo(sgLightEditor.activePanel.currentDB);
	sgLightEditor.activePanel.setGui();
}


//-----------------------------------------------
// filtered relight
//-----------------------------------------------

function sgLightEditor::filteredRelight(%this)
{
	$SceneLighting::sgFilterRelight = "true";
	$SceneLighting::sgFilterRelightByDistance = "true";
	lightScene("filteredRelightComplete", forceAlways);
}

function filteredRelightComplete()
{
	$SceneLighting::sgFilterRelight = "false";
}

function sgLightEditor::setQuality(%this, %qual)
{
	$pref::LightManager::sgLightingProfileQuality = %qual;
	%menuid = %this.constants_quality_menuItemId[%qual];
	sgLightEditorMenuBar.setMenuItemChecked(%this.constants_menuId[%this.constants_menuName[3]], %menuid, true);
}

function sgLightEditor::setShadows(%this, %value)
{
	$pref::LightManager::sgLightingProfileAllowShadows = %value;
	%menuid = %this.constants_quality_menuItemId["shadows"];
	sgLightEditorMenuBar.setMenuItemChecked(%this.constants_menuId[%this.constants_menuName[3]], %menuid, $pref::LightManager::sgLightingProfileAllowShadows);
}

function sgLightEditor::setDRL(%this, %value)
{
	$pref::LightManager::sgUseDynamicRangeLighting = %value;
	%menuid = %this.constants_quality_menuItemId["drl"];
	sgLightEditorMenuBar.setMenuItemChecked(%this.constants_menuId[%this.constants_menuName[3]], %menuid, %value);
}

function sgLightEditor::setBloom(%this, %value)
{
	$pref::LightManager::sgUseBloom = %value;
	%menuid = %this.constants_quality_menuItemId["bloom"];
	sgLightEditorMenuBar.setMenuItemChecked(%this.constants_menuId[%this.constants_menuName[3]], %menuid, %value);
}

function sgLightEditor::setToneMapping(%this, %value)
{
	$pref::LightManager::sgUseToneMapping = %value;
	%menuid = %this.constants_quality_menuItemId["tonemapping"];
	sgLightEditorMenuBar.setMenuItemChecked(%this.constants_menuId[%this.constants_menuName[3]], %menuid, %value);
}
